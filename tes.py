import time
from collections import defaultdict
from dataclasses import dataclass, field
from typing import DefaultDict, Dict, List, Set, Tuple
# from pydantic import BaseModel
from typing import List, Optional
# end

# 1
@dataclass
class TuringMachine:

    states: Set[str] = field(init=False)
    symbols: Set[str] = field(init=False)
    blank_symbol: str = field(init=False)
    input_symbols: Set[str] = field(init=False)
    initial_state: str = field(init=False)
    accepting_states: Set[str] = field(init=False)
    transitions: Dict[Tuple[str, str],
                      Tuple[str, str, int]] = field(init=False)
    # state, symbol -> new state, new symbol, direction

    head: int = field(init=False)
    tape: DefaultDict[int, str] = field(init=False)
    current_state: str = field(init=False)
    halted: bool = field(init=False, default=True)

    tape_string: List[Tuple[str, str]] = field(init=False)

    # end

    # 2)
    def initialize(self, input_symbols: 'dict[int, str]'):
        self.head = 0
        self.halted = False
        self.current_state = self.initial_state
        self.tape = defaultdict(lambda: self.blank_symbol, input_symbols)
        self.tape_string = []

    def additionMode(self):
        self.states = {'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12', 'q13'}
        self.symbols = {'-0', '-1', '0', '1', 'b'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1', '-0', '-1'}
        self.initial_state = 'q1'
        self.accepting_states = {'q13'}
        self.transitions = {
                            ('q1', '0'): ('q1', '0', 1),
                            ('q1', '1'): ('q2', '0', 1),
                            ('q1', 'b'): ('q1', 'b', 1),
                            ('q1', '-0'): ('q6', 'b', 1),

                            ('q2', '0'): ('q2', '0', 1),
                            ('q2', '-0'): ('q2', '-0', 1),
                            ('q2', 'b'): ('q3', 'b', -1),

                            ('q3', '-0'): ('q4', 'b', -1),
                            ('q3', '0'): ('q13', 'b', -1),

                            ('q4', '-0'): ('q4', '-0', -1),
                            ('q4', '0'): ('q4', '0', -1),
                            ('q4', 'b'): ('q5', 'b', 1),

                            ('q5', '0'): ('q2', 'b', 1),
                            ('q5', '-0'): ('q11', '-0', -1),

                            ('q11', 'b'): ('q12', '-0', 1),

                            ('q12', '-0'): ('q12', '-0', 1),
                            ('q12', 'b'): ('q13', '-0', 1),

                            ('q6', '-0'): ('q6', '-0', 1),
                            ('q6', '1'): ('q7', '1', 1),

                            ('q7', '0'): ('q7', '0', 1),
                            ('q7', 'b'): ('q8', 'b', -1),
                            ('q7', '-0'): ('q8', '-0', -1),

                            ('q8', '1'): ('q13', '-0', -1),
                            ('q8', '0'): ('q9', 'b', -1),
                            ('q8', '-0'): ('q9', 'b', -1),

                            ('q9', '0'): ('q9', '0', -1),
                            ('q9', '-0'): ('q9', '-0', -1),
                            ('q9', '1'): ('q10', '1', -1),

                            ('q10', '-0'): ('q10', '-0', -1),
                            ('q10', 'b'): ('q1', 'b', 1),
                           }

    def substraction(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21',
                        'q22'}
        self.symbols = {'0', '1', '-', 'B'}
        self.blank_symbol = 'B'
        self.input_symbols = {'0', '1', '-'}
        self.initial_state = 'q0'
        self.accepting_states = {'q6'}
        self.transitions = {('q0', '0'): ('q0', '0', 1),
                            ('q0', '1'): ('q1', '1', 1),
                            ('q0', '-'): ('q12', '-', 1),

                            ('q1', '0'): ('q1', '0', 1),
                            ('q1', 'B'): ('q2', 'B', -1),
                            ('q1', '-'): ('q8', '0', -1),

                            ('q2', '0'): ('q3', 'B', -1),
                            ('q2', '1'): ('q6', 'B', -1),

                            ('q3', '0'): ('q3', '0', -1),
                            ('q3', '1'): ('q3', '1', -1),
                            ('q3', 'B'): ('q4', 'B', 1),

                            ('q4', '0'): ('q5', 'B', 1),
                            ('q4', '1'): ('q7', '0', -1),

                            ('q5', '0'): ('q5', '0', 1),
                            ('q5', '1'): ('q1', '1', 1),

                            ('q7', 'B'): ('q6', '-', -1),

                            ('q8', '1'): ('q9', '0', 1),

                            ('q9', '0'): ('q9', '0', 1),
                            ('q9', 'B'): ('q10', 'B', -1),

                            ('q10', '0'): ('q11', 'B', -1),

                            ('q11', '0'): ('q6', 'B', -1),

                            ('q12', '0'): ('q12', '0', 1),
                            ('q12', '1'): ('q13', '1', 1),

                            ('q13', '0'): ('q14', '0', -1),
                            ('q13', '-'): ('q15', '-', 1),

                            ('q14', '0'): ('q14', '0', 1),
                            ('q14', '1'): ('q14', '0', 1),
                            ('q14', 'B'): ('q11', 'B', -1),

                            ('q15', '0'): ('q15', '0', 1),
                            ('q15', 'B'): ('q16', 'B', -1),

                            ('q16', '0'): ('q17', 'B', -1),
                            ('q16', '-'): ('q20', 'B', -1),

                            ('q17', '0'): ('q17', '0', -1),
                            ('q17', '-'): ('q17', '-', -1),
                            ('q17', '1'): ('q18', '1', -1),

                            ('q18', 'B'): ('q18', 'B', -1),
                            ('q18', '-'): ('q21', 'B', 1),
                            ('q18', '0'): ('q19', 'B', 1),

                            ('q19', 'B'): ('q19', 'B', 1),
                            ('q19', '1'): ('q13', '1', 1),

                            ('q20', '1'): ('q6', 'B', -1),

                            ('q21', 'B'): ('q21', 'B', 1),
                            ('q21', '1'): ('q22', 'B', 1),

                            ('q22', '-'): ('q6', '0', 1),

                           }


    def multiplicationMode(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19'}
        self.symbols = {'#', '+', '-', '0', '1', 'b', 'x'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1', '+', '-', 'x', '#'}
        self.initial_state = 'q0'
        self.accepting_states = {'q19'}
        self.transitions = {('q0', '-'): ('q0', '-', -1),
                            ('q0', '+'): ('q0', '+', -1),
                            ('q0', 'b'): ('q1', '#', 1),

                            ('q1', '+'): ('q1', '+', 1),
                            ('q1', '-'): ('q1', '-', 1),
                            ('q1', '0'): ('q1', '0', 1),
                            ('q1', '1'): ('q1', '1', 1),
                            ('q1', 'b'): ('q2', '#', -1),

                            ('q2', '0'): ('q2', '0', -1),
                            ('q2', '1'): ('q2', '1', -1),
                            ('q2', '+'): ('q2', '+', -1),
                            ('q2', '-'): ('q2', '-', -1),
                            ('q2', '#'): ('q3', '#', 1),

                            ('q3', '-'): ('q5', '-', 1),
                            ('q3', '+'): ('q4', '+', 1),

                            ('q4', '0'): ('q4', '0', 1),
                            ('q4', '1'): ('q4', '1', 1),
                            ('q4', '+'): ('q6', '+', 1),
                            ('q4', '-'): ('q7', '-', 1),

                            ('q5', '0'): ('q5', '0', 1),
                            ('q5', '1'): ('q5', '1', 1),
                            ('q5', '-'): ('q6', '-', 1),
                            ('q5', '+'): ('q7', '+', 1),

                            ('q6', '0'): ('q6', '0', 1),
                            ('q6', '#'): ('q6', '#', 1),
                            ('q6', 'b'): ('q8', '+', -1),

                            ('q7', '#'): ('q7', '#', 1),
                            ('q7', '0'): ('q7', '0', 1),
                            ('q7', 'b'): ('q8', '-', -1),

                            ('q8', '#'): ('q9', '#', -1),

                            ('q9', '0'): ('q9', '0', -1),
                            ('q9', '1'): ('q9', '1', -1),
                            ('q9', '+'): ('q9', '+', -1),
                            ('q9', '-'): ('q9', '-', -1),
                            ('q9', '#'): ('q10', '#', 1),

                            ('q10', '+'): ('q10', '+', 1),
                            ('q10', '-'): ('q10', '-', 1),
                            ('q10', '0'): ('q11', 'b', 1),
                            ('q10', '1'): ('q18', 'b', 1),

                            ('q11', '0'): ('q11', '0', 1),
                            ('q11', '1'): ('q12', '1', 1),

                            ('q12', '+'): ('q12', '+', 1),
                            ('q12', '-'): ('q12', '-', 1),
                            ('q12', '0'): ('q13', 'x', 1),
                            ('q12', '#'): ('q15', '#', -1),

                            ('q13', '+'): ('q13', '+', 1),
                            ('q13', '-'): ('q13', '-', 1),
                            ('q13', '0'): ('q13', '0', 1),
                            ('q13', '#'): ('q13', '#', 1),
                            ('q13', 'b'): ('q14', '0', -1),

                            ('q14', '+'): ('q14', '+', -1),
                            ('q14', '-'): ('q14', '-', -1),
                            ('q14', '0'): ('q14', '0', -1),
                            ('q14', '#'): ('q14', '#', -1),
                            ('q14', 'x'): ('q12', 'x', 1),

                            ('q15', '+'): ('q15', '+', -1),
                            ('q15', '-'): ('q15', '-', -1),
                            ('q15', '0'): ('q15', '0', -1),
                            ('q15', '1'): ('q15', '1', -1),
                            ('q15', '#'): ('q15', '#', -1),
                            ('q15', 'x'): ('q15', '0', -1),
                            ('q15', 'b'): ('q16', 'b', -1),

                            ('q16', '-'): ('q16', '-', -1),
                            ('q16', '+'): ('q16', '+', -1),
                            ('q16', '#'): ('q16', '#', -1),
                            ('q16', 'b'): ('q17', 'b', 1),

                            ('q17', '-'): ('q17', 'b', 1),
                            ('q17', '+'): ('q17', 'b', 1),
                            ('q17', '#'): ('q17', 'b', 1),
                            ('q17', '1'): ('q17', '1', -1),
                            ('q17', 'b'): ('q10', 'b', 1),

                            ('q18', '+'): ('q18', 'b', 1),
                            ('q18', '-'): ('q18', 'b', 1),
                            ('q18', '0'): ('q18', 'b', 1),
                            ('q18', '#'): ('q19', 'b', 1),
        }


    def division(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12', 'q13', 'q14', 'q15', 'q16'}
        self.symbols = {'0', '1', '-', 'B', '#', 'X'}
        self.blank_symbol = 'B'
        self.input_symbols = {'0', '1', '-'}
        self.initial_state = 'q0'
        self.accepting_states = {'q16'}
        self.transitions = {
                            ('q0', '1'): ('q0', '1', 1),
                            ('q0', '0'): ('q0', '0', 1),
                            ('q0', '-'): ('q0', '-', 1),
                            ('q0', 'B'): ('q1', '#', -1),

                            ('q1', '1'): ('q1', '1', -1),
                            ('q1', '0'): ('q1', '0', -1),
                            ('q1', '-'): ('q1', '-', -1),
                            ('q1', 'B'): ('q2', 'B', 1),

                            ('q2', '0'): ('q2', '0', 1),
                            ('q2', '-'): ('q3', '-', 1),
                            ('q2', '1'): ('q5', '1', 1),

                            ('q3', '0'): ('q3', '0', 1),
                            ('q3', '1'): ('q4', '1', 1),

                            ('q4', '0'): ('q4', '0', 1),
                            ('q4', '#'): ('q4', '#', 1),
                            ('q4', '-'): ('q5', '-', 1),
                            ('q4', 'B'): ('q6', '-', -1),

                            ('q5', '0'): ('q5', '0', 1),
                            ('q5', '#'): ('q5', '#', 1),
                            ('q5', '-'): ('q4', '-', 1),
                            ('q5', 'B'): ('q6', 'B', -1),

                            ('q6', '#'): ('q7', '#', -1),

                            ('q7', '0'): ('q8', 'X', -1),
                            ('q7', '-'): ('q11', '-', 1),
                            ('q7', '1'): ('q11', '1', 1),

                            ('q8', '1'): ('q8', '1', -1),
                            ('q8', '0'): ('q8', '0', -1),
                            ('q8', '-'): ('q8', '-', -1),
                            ('q8', 'B'): ('q9', 'B', 1),

                            ('q9', '-'): ('q9', 'B', 1),
                            ('q9', '0'): ('q10', 'B', 1),
                            ('q9', '1'): ('q14', 'B', 1),

                            ('q10', '1'): ('q10', '1', 1),
                            ('q10', '0'): ('q10', '0', 1),
                            ('q10', '-'): ('q10', '-', 1),
                            ('q10', 'X'): ('q7', 'X', -1),

                            ('q11', 'X'): ('q11', '0', 1),
                            ('q11', '#'): ('q12', '#', 1),

                            ('q12', '0'): ('q12', '0', 1),
                            ('q12', '-'): ('q12', '-', 1),
                            ('q12', 'B'): ('q13', '0', -1),

                            ('q13', '0'): ('q13', '0', -1),
                            ('q13', '-'): ('q13', '-', -1),
                            ('q13', '#'): ('q7', '#', -1),

                            ('q14', '0'): ('q14', 'B', 1),
                            ('q14', '-'): ('q14', 'B', 1),
                            ('q14', 'X'): ('q15', 'B', 1),

                            ('q15', 'X'): ('q15', 'X', 1),
                            ('q15', '0'): ('q15', 'B', 1),
                            ('q15', '-'): ('q15', 'B', 1),
                            ('q15', '#'): ('q16', '#', 1),
                                    }


    def faktorialMode(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21',
                        'q22', 'q23', 'q24', 'q25'}
        self.symbols = {'1', '0', 'b', 'x'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1', 'x'}
        self.initial_state = 'q0'
        self.accepting_states = {'q24'}
        self.transitions = {
                            ('q0', '0'): ('q0', '0', 1),
                            ('q0', 'b'): ('q1', '1', -1),

                            ('q1', '0'): ('q1', '0', -1),
                            ('q1', '1'): ('q2', '0', -1),
                            ('q1', 'b'): ('q2', 'b', 1),

                            ('q2', '0'): ('q3', 'x', 1),
                            ('q2', '1'): ('q5', '1', 1),

                            ('q3', '0'): ('q3', '0', 1),
                            ('q3', '1'): ('q3', '1', 1),
                            ('q3', 'b'): ('q4', '0', -1),

                            ('q4', '0'): ('q4', '0', -1),
                            ('q4', '1'): ('q4', '1', -1),
                            ('q4', 'x'): ('q2', 'x', 1),

                            ('q5', '0'): ('q5', '0', 1),
                            ('q5', 'b'): ('q7', '1', -1),

                            ('q6', '0'): ('q6', '0', -1),
                            ('q6', '1'): ('q6', '1', -1),
                            ('q6', 'x'): ('q6', 'x', -1),
                            ('q6', 'b'): ('q16', 'b', 1),

                            ('q7', 'b'): ('q8', 'b', 1),
                            ('q7', '0'): ('q7', '0', -1),
                            ('q7', '1'): ('q7', '1', -1),
                            ('q7', 'x'): ('q7', '0', -1),

                            ('q8', '0'): ('q9', 'b', 1),

                            ('q9', '0'): ('q10', 'x', 1),
                            ('q9', '1'): ('q6', '1', -1),

                            ('q10', '1'): ('q11', '1', 1),
                            ('q10', '0'): ('q10', '0', 1),

                            ('q11', '0'): ('q12', 'x', 1),
                            ('q11', '1'): ('q14', '1', -1),

                            ('q12', '0'): ('q12', '0', 1),
                            ('q12', '1'): ('q12', '1', 1),
                            ('q12', 'b'): ('q13', '0', -1),

                            ('q13', 'x'): ('q11', 'x', 1),
                            ('q13', '1'): ('q13', '1', -1),
                            ('q13', '0'): ('q13', '0', -1),

                            ('q14', 'x'): ('q14', '0', -1),
                            ('q14', '1'): ('q15', '1', -1),

                            ('q15', '0'): ('q15', '0', -1),
                            ('q15', '1'): ('q15', '1', -1),
                            ('q15', 'x'): ('q9', 'x', 1),

                            ('q16', '1'): ('q25', 'b', 1),
                            ('q16', 'x'): ('q17', 'b', 1),

                            ('q17', 'x'): ('q19', 'x', 1),
                            ('q17', '0'): ('q18', 'b', 1),
                            ('q17', '1'): ('q18', 'b', 1),

                            ('q18', '0'): ('q18', 'b', 1),
                            ('q18', '1'): ('q24', 'b', 1),
                            ('q18', 'x'): ('q24', 'x', 1),

                            ('q19', '0'): ('q19', '0', 1),
                            ('q19', 'x'): ('q19', 'x', 1),
                            ('q19', '1'): ('q20', '1', 1),

                            ('q20', 'x'): ('q20', 'x', 1),
                            ('q20', '0'): ('q20', '0', 1),
                            ('q20', '1'): ('q21', '1', -1),

                            ('q21', 'x'): ('q21', 'x', -1),
                            ('q21', '0'): ('q6', 'x', -1),
                            ('q21', '1'): ('q6', 'x', -1),

                            ('q22', 'b'): ('q23', '1', -1),
                            ('q22', '1'): ('q22', '1', 1),
                            ('q22', 'x'): ('q22', 'x', 1),
                            ('q22', '0'): ('q22', '0', 1),

                            ('q23', 'b'): ('q9', 'b', 1),
                            ('q23', '1'): ('q23', '1', -1),
                            ('q23', 'x'): ('q23', '0', 1),
                            ('q23', '0'): ('q23', '0', -1),

                            ('q25', '1'): ('q25', 'b', 1),
                            ('q25', 'b'): ('q24', 'b', 1),
                            ('q25', '0'): ('q24', '0', 1),

        }

    def powerMode(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21',
                        'q22', 'q23', 'q24', 'q25', 'q26', 'q27'}
        self.symbols = {'0', '1', 'b', '#'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1'}
        self.initial_state = 'q0'
        self.accepting_states = {'q27'}
        self.transitions = {
                            ('q0', '0'): ('q1', 'b', 1),
                            ('q0', 'b'): ('q0', 'b', 1),

                            ('q1', '0'): ('q1', '0', 1),
                            ('q1', '1'): ('q2', '1', 1),

                            ('q2', 'b'): ('q2', 'b', 1),
                            ('q2', '0'): ('q3', 'b', 1),
                            ('q2', '1'): ('q7', '1', 1),

                            ('q3', '0'): ('q3', '0', 1),
                            ('q3', '1'): ('q4', '1', 1),

                            ('q4', '0'): ('q4', '0', 1),
                            ('q4', '#'): ('q4', '#', 1),
                            ('q4', 'b'): ('q5', '0', -1),
                            ('q4', '1'): ('q11', '1', -1),

                            ('q5', '0'): ('q5', '0', -1),
                            ('q5', '1'): ('q6', '1', -1),

                            ('q6', '0'): ('q6', '0', -1),
                            ('q6', 'b'): ('q2', 'b', 1),

                            ('q7', '0'): ('q7', '0', 1),
                            ('q7', '#'): ('q7', '#', 1),
                            ('q7', 'b'): ('q8', '1', -1),
                            ('q7', '1'): ('q18', '#', -1),

                            ('q8', '0'): ('q8', '0', -1),
                            ('q8', '1'): ('q9', '1', -1),

                            ('q9', 'b'): ('q9', '0', -1),
                            ('q9', '1'): ('q10', '1', -1),

                            ('q10', '0'): ('q10', '0', -1),
                            ('q10', 'b'): ('q0', 'b', 1),

                            ('q11', 'b'): ('q11', 'b', -1),
                            ('q11', '0'): ('q12', 'b', 1),
                            ('q11', '1'): ('q15', '1', 1),
                            ('q11', '#'): ('q15', '#', 1),

                            ('q12', 'b'): ('q12', 'b', 1),
                            ('q12', '1'): ('q13', '1', 1),

                            ('q13', '0'): ('q13', '0', 1),
                            ('q13', 'b'): ('q14', '0', -1),

                            ('q14', '0'): ('q14', '0', -1),
                            ('q14', '1'): ('q11', '1', -1),

                            ('q15', 'b'): ('q15', '0', 1),
                            ('q15', '1'): ('q16', '1', -1),

                            ('q16', '0'): ('q16', '0', -1),
                            ('q16', '#'): ('q16', '#', -1),
                            ('q16', '1'): ('q17', '1', -1),

                            ('q17', '0'): ('q17', '0', -1),
                            ('q17', 'b'): ('q2', 'b', 1),

                            ('q18', '0'): ('q18', '0', -1),
                            ('q18', '1'): ('q19', '1', 1),
                            ('q18', '#'): ('q19', '#', 1),

                            ('q19', '0'): ('q19', '#', 1),
                            ('q19', '#'): ('q20', '#', 1),

                            ('q20', '0'): ('q20', '0', 1),
                            ('q20', 'b'): ('q21', '1', -1),

                            ('q21', '1'): ('q21', '1', -1),
                            ('q21', '0'): ('q21', '0', -1),
                            ('q21', '#'): ('q21', '#', -1),
                            ('q21', 'b'): ('q22', '0', -1),

                            ('q22', 'b'): ('q22', '0', -1),
                            ('q22', '1'): ('q23', '1', -1),

                            ('q23', '0'): ('q23', '0', -1),
                            ('q23', 'b'): ('q0', 'b', 1),

                            ('q0', '1'): ('q24', 'b', 1),

                            ('q24', '0'): ('q24', 'b', 1),
                            ('q24', '1'): ('q25', 'b', 1),

                            ('q25', '#'): ('q25', 'b', 1),
                            ('q25', '1'): ('q26', 'b', 1),
                            ('q25', '0'): ('q26', '0', 1),
                            ('q25', 'b'): ('q27', '0', 1),

                            ('q26', '0'): ('q26', '0', 1),
                            ('q26', '1'): ('q27', 'b', 1),
                           }

    def logaritmaMode(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12'}
        self.symbols = {'0', '1', '#', 'b'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1', '#', 'b'}
        self.initial_state = 'q0'
        self.accepting_states = {'q12'}
        self.transitions = {('q0', 'b'): ('q12', 'b', 1),
                            ('q0', '0'): ('q1', '0', 1),

                            ('q1', 'b'): ('q11', 'b', -1),
                            ('q1', '0'): ('q2', '0', 1),

                            ('q2', 'b'): ('q11', 'b', -1),
                            ('q2', '0'): ('q3', '#', 1),

                            ('q3', 'b'): ('q7', 'b', -1),
                            ('q3', '0'): ('q4', '#', -1),
                            ('q3', '#'): ('q3', '#', 1),

                            ('q4', 'b'): ('q5', 'b', 1),
                            ('q4', '0'): ('q4', '0', -1),
                            ('q4', '1'): ('q4', '1', -1),
                            ('q4', '#'): ('q4', '#', -1),

                            ('q5', '0'): ('q5', '1', 1),
                            ('q5', '1'): ('q6', '0', 1),
                            ('q5', '#'): ('q6', '0', 1),

                            ('q6', '0'): ('q6', '0', 1),
                            ('q6', '1'): ('q6', '1', 1),
                            ('q6', '#'): ('q3', '#', 1),

                            ('q7', 'b'): ('q8', 'b', 1),
                            ('q7', '0'): ('q7', '0', -1),
                            ('q7', '1'): ('q7', '1', -1),
                            ('q7', '#'): ('q7', 'b', -1),

                            ('q8', '0'): ('q9', '0', 1),
                            ('q8', '1'): ('q8', '0', 1),

                            ('q9', 'b'): ('q11', 'b', -1),
                            ('q9', '0'): ('q10', '0', 1),
                            ('q9', '1'): ('q9', '0', 1),

                            ('q10', 'b'): ('q12', 'b', -1),
                            ('q10', '0'): ('q10', '0', 1),
                            ('q10', '1'): ('q10', '0', 1),

                            ('q11', '0'): ('q12', 'b', 1),

                           }

    def celciusKelvin(self):
        self.states = {'q0', 'q1', 'q2'}
        self.symbols = {'0', '1', 'b'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1'}
        self.initial_state = 'q0'
        self.accepting_states = {'q2'}
        self.transitions = {
                            ('q0', '0'): ('q1', '0^273', 1),
                            ('q0', '1'): ('q2', '0', 1),
                            ('q0', 'b'): ('q0', 'b', 1),

                            ('q1', '0'): ('q1', '0', 1),

                            ('q1', '1'): ('q2', '0', 1),
                           }
    def celsiusToFahrenheit(self):
        self.states = {'q', 'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10', 'q11',
                      'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21', 'q22',
                      'q23', 'q24', 'q25', 'q26', 'q27', 'q28', 'q29', 'q30', 'q31', 'q32', 'q33',
                      'q34', 'q35','q36', 'q37', 'q38', 'q39', 'q40', 'q41', 'q42', 'q43', 'q44',
                      'q45', 'q46', 'q47', 'q48', 'q49','q50', 'q51', 'q52', 'q53', 'q54', 'q55'}
        self.symbols = {'#', '+', '-', '0', '1', 'B', 'x', '0^32'}
        self.blank_symbol = 'B'
        self.input_symbols = {'0', '1', '+', '-', 'x', '#'}
        self.initial_state = 'q'
        self.accepting_states = {'q55'}
        self.transitions = {('q', '-'): ('q', '-', 1),
                            ('q', '+'): ('q', '+', 1),
                            ('q', '0'): ('q', '0', 1),
                            ('q', 'B'): ('q0', '1', 1),

                            ('q0', 'B'): ('q1', '+', 1),

                            ('q1', 'B'): ('q2', '0', 1),

                            ('q2', 'B'): ('q3', '0', 1),

                            ('q3', 'B'): ('q4', '0', 1),

                            ('q4', 'B'): ('q5', '0', 1),

                            ('q5', 'B'): ('q6', '0', 1),

                            ('q6', 'B'): ('q7', '0', 1),

                            ('q7', 'B'): ('q8', '0', 1),

                            ('q8', 'B'): ('q9', '0', 1),

                            ('q9', 'B'): ('q10', '0', 1),

                            ('q10', 'B'): ('q11', 'B', -1),

                            ('q11', 'B'): ('q12', 'B', 1),
                            ('q11', '0'): ('q11', '0', -1),
                            ('q11', '1'): ('q11', '1', -1),
                            ('q11', '-'): ('q11', '-', -1),
                            ('q11', '+'): ('q11', '+', -1),

                            ('q12', '-'): ('q12', '-', -1),
                            ('q12', '+'): ('q12', '+', -1),
                            ('q12', 'B'): ('q13', '#', 1),

                            ('q13', '+'): ('q13', '+', 1),
                            ('q13', '-'): ('q13', '-', 1),
                            ('q13', '0'): ('q13', '0', 1),
                            ('q13', '1'): ('q13', '1', 1),
                            ('q13', 'B'): ('q14', '#', -1),

                            ('q14', '0'): ('q14', '0', -1),
                            ('q14', '1'): ('q14', '1', -1),
                            ('q14', '+'): ('q14', '+', -1),
                            ('q14', '-'): ('q14', '-', -1),
                            ('q14', '#'): ('q15', '#', 1),

                            ('q15', '-'): ('q17', '-', 1),
                            ('q15', '+'): ('q16', '+', 1),

                            ('q16', '0'): ('q16', '0', 1),
                            ('q16', '1'): ('q16', '1', 1),
                            ('q16', '+'): ('q18', '+', 1),
                            ('q16', '-'): ('q19', '-', 1),

                            ('q17', '0'): ('q17', '0', 1),
                            ('q17', '1'): ('q17', '1', 1),
                            ('q17', '-'): ('q18', '-', 1),
                            ('q17', '+'): ('q19', '+', 1),

                            ('q18', '0'): ('q18', '0', 1),
                            ('q18', '#'): ('q18', '#', 1),
                            ('q18', 'B'): ('q20', '+', -1),

                            ('q19', '#'): ('q19', '#', 1),
                            ('q19', '0'): ('q19', '0', 1),
                            ('q19', 'B'): ('q20', '-', -1),

                            ('q20', '#'): ('q21', '#', -1),

                            ('q21', '0'): ('q21', '0', -1),
                            ('q21', '1'): ('q21', '1', -1),
                            ('q21', '+'): ('q21', '+', -1),
                            ('q21', '-'): ('q21', '-', -1),
                            ('q21', '#'): ('q22', '#', 1),

                            ('q22', '+'): ('q22', '+', 1),
                            ('q22', '-'): ('q22', '-', 1),
                            ('q22', '0'): ('q23', 'B', 1),
                            ('q22', '1'): ('q30', 'B', 1),

                            ('q23', '0'): ('q23', '0', 1),
                            ('q23', '1'): ('q24', '1', 1),

                            ('q24', '+'): ('q24', '+', 1),
                            ('q24', '-'): ('q24', '-', 1),
                            ('q24', '0'): ('q25', 'x', 1),
                            ('q24', '#'): ('q27', '#', -1),

                            ('q25', '+'): ('q25', '+', 1),
                            ('q25', '-'): ('q25', '-', 1),
                            ('q25', '0'): ('q25', '0', 1),
                            ('q25', '#'): ('q25', '#', 1),
                            ('q25', 'B'): ('q26', '0', -1),

                            ('q26', '+'): ('q26', '+', -1),
                            ('q26', '-'): ('q26', '-', -1),
                            ('q26', '0'): ('q26', '0', -1),
                            ('q26', '#'): ('q26', '#', -1),
                            ('q26', 'x'): ('q24', 'x', 1),

                            ('q27', '+'): ('q27', '+', -1),
                            ('q27', '-'): ('q27', '-', -1),
                            ('q27', '0'): ('q27', '0', -1),
                            ('q27', '1'): ('q27', '1', -1),
                            ('q27', '#'): ('q27', '#', -1),
                            ('q27', 'x'): ('q27', '0', -1),
                            ('q27', 'B'): ('q28', 'B', -1),

                            ('q28', '-'): ('q28', '-', -1),
                            ('q28', '+'): ('q28', '+', -1),
                            ('q28', '#'): ('q28', '#', -1),
                            ('q28', 'B'): ('q29', 'B', 1),

                            ('q29', '-'): ('q29', 'B', 1),
                            ('q29', '+'): ('q29', 'B', 1),
                            ('q29', '#'): ('q29', 'B', 1),
                            ('q29', '1'): ('q29', '1', -1),
                            ('q29', 'B'): ('q22', 'B', 1),

                            ('q30', '+'): ('q30', 'B', 1),
                            ('q30', '-'): ('q30', 'B', 1),
                            ('q30', '0'): ('q30', 'B', 1),
                            ('q30', '#'): ('q31', 'B', 1),

                            ('q31', '+'): ('q31', 'B', 1),
                            ('q31', '-'): ('q31', '-', 1),
                            ('q31', '0'): ('q31', '0', 1),
                            ('q31', 'B'): ('q32', '1', 1),

                            ('q32', 'B'): ('q33', '0', 1),

                            ('q33', 'B'): ('q34', '0', 1),

                            ('q34', 'B'): ('q35', '0', 1),

                            ('q35', 'B'): ('q36', '0', 1),

                            ('q36', 'B'): ('q37', '0', -1),

                            ('q37', '0'): ('q37', '0', -1),
                            ('q37', '1'): ('q37', '1', -1),
                            ('q37', '-'): ('q37', '-', -1),
                            ('q37', 'B'): ('q38', 'B', 1),

                            ('q38', '1'): ('q38', '1', 1),
                            ('q38', '0'): ('q38', '0', 1),
                            ('q38', '-'): ('q38', '-', 1),
                            ('q38', 'B'): ('q39', '#', -1),

                            ('q39', '1'): ('q39', '1', -1),
                            ('q39', '0'): ('q39', '0', -1),
                            ('q39', '-'): ('q39', '-', -1),
                            ('q39', 'B'): ('q40', 'B', 1),

                            ('q40', '0'): ('q40', '0', 1),
                            ('q40', '-'): ('q41', '-', 1),
                            ('q40', '1'): ('q43', '1', 1),

                            ('q41', '0'): ('q41', '0', 1),
                            ('q41', '1'): ('q42', '1', 1),

                            ('q42', '0'): ('q42', '0', 1),
                            ('q42', '#'): ('q42', '#', 1),
                            ('q42', '-'): ('q43', '-', 1),
                            ('q42', 'B'): ('q44', '-', -1),

                            ('q43', '0'): ('q43', '0', 1),
                            ('q43', '#'): ('q43', '#', 1),
                            ('q43', '-'): ('q42', '-', 1),
                            ('q43', 'B'): ('q44', 'B', -1),

                            ('q44', '#'): ('q45', '#', -1),

                            ('q45', '0'): ('q46', 'X', -1),
                            ('q45', '-'): ('q49', '-', 1),
                            ('q45', '1'): ('q49', '1', 1),

                            ('q46', '1'): ('q46', '1', -1),
                            ('q46', '0'): ('q46', '0', -1),
                            ('q46', '-'): ('q46', '-', -1),
                            ('q46', 'B'): ('q47', 'B', 1),

                            ('q47', '-'): ('q47', 'B', 1),
                            ('q47', '0'): ('q48', 'B', 1),
                            ('q47', '1'): ('q52', 'B', 1),

                            ('q48', '1'): ('q48', '1', 1),
                            ('q48', '0'): ('q48', '0', 1),
                            ('q48', '-'): ('q48', '-', 1),
                            ('q48', 'X'): ('q45', 'X', -1),

                            ('q49', 'X'): ('q49', '0', 1),
                            ('q49', '#'): ('q50', '#', 1),

                            ('q50', '0'): ('q50', '0', 1),
                            ('q50', '-'): ('q50', '-', 1),
                            ('q50', 'B'): ('q51', '0', -1),

                            ('q51', '0'): ('q51', '0', -1),
                            ('q51', '-'): ('q51', '-', -1),
                            ('q51', '#'): ('q45', '#', -1),

                            ('q52', '0'): ('q52', 'B', 1),
                            ('q52', '-'): ('q52', 'B', 1),
                            ('q52', 'X'): ('q52', 'B', 1),
                            ('q52', '#'): ('q53', 'B', 1),

                            ('q53', '0'): ('q53', '0', 1),
                            ('q53', '-'): ('q53', '-', 1),
                            ('q53', 'B'): ('q54', '+', 1),

                            ('q54', 'B'): ('q55', '0^32', 1),
        }

    def kelvinToCelciusMode(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7'}
        self.symbols = {'0', '-', '+', 'K', 'b'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '-', '+', 'K', 'b'}
        self.initial_state = 'q0'
        self.accepting_states = {'q7'}
        self.transitions = {('q0', 'b'): ('q6', '-', 1),
                            ('q0', '0'): ('q2', '0', -1),
                            ('q0', 'K'): ('q1', 'b', 1),

                            ('q1', 'b'): ('q7', 'b', 1),
                            ('q1', '0'): ('q1', '0', 1),

                            ('q2', 'b'): ('q3', '+', -1),

                            ('q3', 'b'): ('q4', 'K', -1),

                            ('q4', 'b'): ('q5', '-', -1),

                            ('q5', 'b'): ('q7', 'b', -1),

                            ('q6', 'b'): ('q7', 'K', 1),

                           }


    def KelvinToFahrenheitMode(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11','q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21', 'q22',
                        'q23', 'q24', 'q25', 'q26', 'q27', 'q28', 'q29', 'q30', 'q31', 'q32', 'q33', 'q34', 'q35',
                       'q36', 'q37', 'q38', 'q39', 'q40', 'q41', 'q42', 'q43', 'q44', 'q45', 'q46', 'q47', 'q48', 'q49',
                       'q50', 'q51', 'q52', 'q53', 'q54', 'q55', 'q56'}
        self.symbols = {'#', '+', '-', '0', '1', 'b', 'x', 'F'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1', '+', '-', 'x', '#'}
        self.initial_state = 'q0'
        self.accepting_states = {'q55'}
        self.transitions = {('q0', '-'): ('q0', '-', 1),
                            ('q0', '+'): ('q0', '+', 1),
                            ('q0', '0'): ('q0', '0', 1),
                            ('q0', 'b'): ('q1', '1', 1),

                            ('q1', 'b'): ('q56', '+', 1),

                            ('q56', 'b'): ('q2', '0', 1),

                            ('q2', 'b'): ('q3', '0', 1),

                            ('q3', 'b'): ('q4', '0', 1),

                            ('q4', 'b'): ('q5', '0', 1),

                            ('q5', 'b'): ('q6', '0', 1),

                            ('q6', 'b'): ('q7', '0', 1),

                            ('q7', 'b'): ('q8', '0', 1),

                            ('q8', 'b'): ('q9', '0', 1),

                            ('q9', 'b'): ('q10', '0', 1),

                            ('q10', 'b'): ('q11', 'b', -1),

                            ('q11', 'b'): ('q12', 'b', 1),
                            ('q11', '0'): ('q11', '0', -1),
                            ('q11', '1'): ('q11', '1', -1),
                            ('q11', '-'): ('q11', '-', -1),
                            ('q11', '+'): ('q11', '+', -1),

                            ('q12', '-'): ('q12', '-', -1),
                            ('q12', '+'): ('q12', '+', -1),
                            ('q12', 'b'): ('q13', '#', 1),

                            ('q13', '+'): ('q13', '+', 1),
                            ('q13', '-'): ('q13', '-', 1),
                            ('q13', '0'): ('q13', '0', 1),
                            ('q13', '1'): ('q13', '1', 1),
                            ('q13', 'b'): ('q14', '#', -1),

                            ('q14', '0'): ('q14', '0', -1),
                            ('q14', '1'): ('q14', '1', -1),
                            ('q14', '+'): ('q14', '+', -1),
                            ('q14', '-'): ('q14', '-', -1),
                            ('q14', '#'): ('q15', '#', 1),

                            ('q15', '-'): ('q17', '-', 1),
                            ('q15', '+'): ('q16', '+', 1),

                            ('q16', '0'): ('q16', '0', 1),
                            ('q16', '1'): ('q16', '1', 1),
                            ('q16', '+'): ('q18', '+', 1),
                            ('q16', '-'): ('q19', '-', 1),

                            ('q17', '0'): ('q17', '0', 1),
                            ('q17', '1'): ('q17', '1', 1),
                            ('q17', '-'): ('q18', '-', 1),
                            ('q17', '+'): ('q19', '+', 1),

                            ('q18', '0'): ('q18', '0', 1),
                            ('q18', '#'): ('q18', '#', 1),
                            ('q18', 'b'): ('q20', '+', -1),

                            ('q19', '#'): ('q19', '#', 1),
                            ('q19', '0'): ('q19', '0', 1),
                            ('q19', 'b'): ('q20', '-', -1),

                            ('q20', '#'): ('q21', '#', -1),

                            ('q21', '0'): ('q21', '0', -1),
                            ('q21', '1'): ('q21', '1', -1),
                            ('q21', '+'): ('q21', '+', -1),
                            ('q21', '-'): ('q21', '-', -1),
                            ('q21', '#'): ('q22', '#', 1),

                            ('q22', '+'): ('q22', '+', 1),
                            ('q22', '-'): ('q22', '-', 1),
                            ('q22', '0'): ('q23', 'b', 1),
                            ('q22', '1'): ('q30', 'b', 1),

                            ('q23', '0'): ('q23', '0', 1),
                            ('q23', '1'): ('q24', '1', 1),

                            ('q24', '+'): ('q24', '+', 1),
                            ('q24', '-'): ('q24', '-', 1),
                            ('q24', '0'): ('q25', 'x', 1),
                            ('q24', '#'): ('q27', '#', -1),

                            ('q25', '+'): ('q25', '+', 1),
                            ('q25', '-'): ('q25', '-', 1),
                            ('q25', '0'): ('q25', '0', 1),
                            ('q25', '#'): ('q25', '#', 1),
                            ('q25', 'b'): ('q26', '0', -1),

                            ('q26', '+'): ('q26', '+', -1),
                            ('q26', '-'): ('q26', '-', -1),
                            ('q26', '0'): ('q26', '0', -1),
                            ('q26', '#'): ('q26', '#', -1),
                            ('q26', 'x'): ('q24', 'x', 1),

                            ('q27', '+'): ('q27', '+', -1),
                            ('q27', '-'): ('q27', '-', -1),
                            ('q27', '0'): ('q27', '0', -1),
                            ('q27', '1'): ('q27', '1', -1),
                            ('q27', '#'): ('q27', '#', -1),
                            ('q27', 'x'): ('q27', '0', -1),
                            ('q27', 'b'): ('q28', 'b', -1),

                            ('q28', '-'): ('q28', '-', -1),
                            ('q28', '+'): ('q28', '+', -1),
                            ('q28', '#'): ('q28', '#', -1),
                            ('q28', 'b'): ('q29', 'b', 1),

                            ('q29', '-'): ('q29', 'b', 1),
                            ('q29', '+'): ('q29', 'b', 1),
                            ('q29', '#'): ('q29', 'b', 1),
                            ('q29', '1'): ('q29', '1', -1),
                            ('q29', 'b'): ('q22', 'b', 1),

                            ('q30', '+'): ('q30', 'b', 1),
                            ('q30', '-'): ('q30', 'b', 1),
                            ('q30', '0'): ('q30', 'b', 1),
                            ('q30', '#'): ('q31', 'b', 1),

                            ('q31', '+'): ('q31', 'b', 1),
                            ('q31', '-'): ('q31', '-', 1),
                            ('q31', '0'): ('q31', '0', 1),
                            ('q31', 'b'): ('q32', '1', 1),

                            ('q32', 'b'): ('q33', '0', 1),

                            ('q33', 'b'): ('q34', '0', 1),

                            ('q34', 'b'): ('q35', '0', 1),

                            ('q35', 'b'): ('q36', '0', 1),

                            ('q36', 'b'): ('q37', '0', -1),

                            ('q37', '0'): ('q37', '0', -1),
                            ('q37', '1'): ('q37', '1', -1),
                            ('q37', '-'): ('q37', '-', -1),
                            ('q37', 'b'): ('q38', 'b', 1),

                            ('q38', '1'): ('q38', '1', 1),
                            ('q38', '0'): ('q38', '0', 1),
                            ('q38', '-'): ('q38', '-', 1),
                            ('q38', 'b'): ('q39', '#', -1),

                            ('q39', '1'): ('q39', '1', -1),
                            ('q39', '0'): ('q39', '0', -1),
                            ('q39', '-'): ('q39', '-', -1),
                            ('q39', 'b'): ('q40', 'b', 1),

                            ('q40', '0'): ('q40', '0', 1),
                            ('q40', '-'): ('q41', '-', 1),
                            ('q40', '1'): ('q43', '1', 1),

                            ('q41', '0'): ('q41', '0', 1),
                            ('q41', '1'): ('q42', '1', 1),

                            ('q42', '0'): ('q42', '0', 1),
                            ('q42', '#'): ('q42', '#', 1),
                            ('q42', '-'): ('q43', '-', 1),
                            ('q42', 'b'): ('q44', '-', -1),

                            ('q43', '0'): ('q43', '0', 1),
                            ('q43', '#'): ('q43', '#', 1),
                            ('q43', '-'): ('q42', '-', 1),
                            ('q43', 'b'): ('q44', 'b', -1),

                            ('q44', '#'): ('q45', '#', -1),

                            ('q45', '0'): ('q46', 'X', -1),
                            ('q45', '-'): ('q49', '-', 1),
                            ('q45', '1'): ('q49', '1', 1),

                            ('q46', '1'): ('q46', '1', -1),
                            ('q46', '0'): ('q46', '0', -1),
                            ('q46', '-'): ('q46', '-', -1),
                            ('q46', 'b'): ('q47', 'b', 1),

                            ('q47', '-'): ('q47', 'b', 1),
                            ('q47', '0'): ('q48', 'b', 1),
                            ('q47', '1'): ('q52', 'b', 1),

                            ('q48', '1'): ('q48', '1', 1),
                            ('q48', '0'): ('q48', '0', 1),
                            ('q48', '-'): ('q48', '-', 1),
                            ('q48', 'X'): ('q45', 'X', -1),

                            ('q49', 'X'): ('q49', '0', 1),
                            ('q49', '#'): ('q50', '#', 1),

                            ('q50', '0'): ('q50', '0', 1),
                            ('q50', '-'): ('q50', '-', 1),
                            ('q50', 'b'): ('q51', '0', -1),

                            ('q51', '0'): ('q51', '0', -1),
                            ('q51', '-'): ('q51', '-', -1),
                            ('q51', '#'): ('q45', '#', -1),

                            ('q52', '0'): ('q52', 'b', 1),
                            ('q52', '-'): ('q52', 'b', 1),
                            ('q52', 'X'): ('q52', 'b', 1),
                            ('q52', '#'): ('q53', 'b', 1),

                            ('q53', '0'): ('q53', '0', 1),
                            ('q53', '-'): ('q53', '-', 1),
                            ('q53', 'b'): ('q54', '-', 1),

                            ('q54', 'b'): ('q55', 'F', 1),
        }


    def fahrenheitToCelciusMode(self):
        self.states = {'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10',
                        'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21',
                        'q22', 'q23', 'q24', 'q25', 'q26', 'q27', 'q28', 'q29', 'q30', 'q31', 'q32', 'q33', 'q34',
                       'q35', 'q36', 'q37', 'q38', 'q39', 'q40', 'q41'}
        self.symbols = {'0', '1', '#', 'x', 'b', '-'}
        self.blank_symbol = 'b'
        self.input_symbols = {'0', '1', '#', 'x', '-'}
        self.initial_state = 'q0'
        self.accepting_states = {'q41'}
        self.transitions = {('q0', '0'): ('q0', '0', 1),
                            ('q0', '1'): ('q1', '1', 1),
                            ('q0', '-'): ('q12', '-', 1),

                            ('q1', '0'): ('q1', '0', 1),
                            ('q1', 'b'): ('q2', 'b', -1),
                            ('q1', '-'): ('q8', '0', -1),

                            ('q2', '0'): ('q3', 'b', -1),
                            ('q2', '1'): ('q6', 'b', -1),

                            ('q3', '0'): ('q3', '0', -1),
                            ('q3', '1'): ('q3', '1', -1),
                            ('q3', 'b'): ('q4', 'b', 1),

                            ('q4', '0'): ('q5', 'b', 1),
                            ('q4', '1'): ('q7', '0', -1),

                            ('q5', '0'): ('q5', '0', 1),
                            ('q5', '1'): ('q1', '1', 1),

                            ('q6', '0'): ('q23', '0', 1),

                            ('q7', 'b'): ('q6', '-', -1),

                            ('q8', '1'): ('q9', '0', 1),

                            ('q9', '0'): ('q9', '0', 1),
                            ('q9', 'b'): ('q10', 'b', -1),

                            ('q10', '0'): ('q11', 'b', -1),

                            ('q11', '0'): ('q6', 'b', -1),

                            ('q12', '0'): ('q12', '0', 1),
                            ('q12', '1'): ('q13', '1', 1),

                            ('q13', '0'): ('q14', '0', -1),
                            ('q13', '-'): ('q15', '-', 1),

                            ('q14', '0'): ('q14', '0', 1),
                            ('q14', '1'): ('q14', '0', 1),
                            ('q14', 'b'): ('q11', 'b', -1),

                            ('q15', '0'): ('q15', '0', 1),
                            ('q15', 'b'): ('q16', 'b', -1),

                            ('q16', '0'): ('q17', 'b', -1),
                            ('q16', '-'): ('q20', 'b', -1),

                            ('q17', '0'): ('q17', '0', -1),
                            ('q17', '-'): ('q17', '-', -1),
                            ('q17', '1'): ('q18', '1', -1),

                            ('q18', 'b'): ('q18', 'b', -1),
                            ('q18', '-'): ('q21', 'b', 1),
                            ('q18', '0'): ('q19', 'b', 1),

                            ('q19', 'b'): ('q19', 'b', 1),
                            ('q19', '1'): ('q13', '1', 1),

                            ('q20', '1'): ('q6', 'b', -1),

                            ('q21', 'b'): ('q21', 'b', 1),
                            ('q21', '1'): ('q22', 'b', 1),

                            ('q22', '-'): ('q6', '0', 1),

                            ('q23', '0'): ('q23', '0', 1),
                            ('q23', 'b'): ('q24', '1', 1),

                            ('q24', 'b'): ('q25', '0', 1),

                            ('q25', 'b'): ('q26', '0', 1),

                            ('q26', 'b'): ('q27', '#', -1),

                            ('q27', '0'): ('q27', '0', -1),
                            ('q27', '1'): ('q27', '1', -1),
                            ('q27', '-'): ('q27', '-', -1),
                            ('q27', 'b'): ('q28', 'b', 1),

                            ('q28', '0'): ('q28', '0', 1),
                            ('q28', '1'): ('q31', '1', 1),
                            ('q28', '-'): ('q29', '-', 1),

                            ('q29', '0'): ('q29', '0', 1),
                            ('q29', '1'): ('q30', '1', 1),

                            ('q30', '0'): ('q30', '0', 1),
                            ('q30', '#'): ('q30', '#', 1),
                            ('q30', '-'): ('q31', '-', 1),
                            ('q30', 'b'): ('q32', '-', -1),

                            ('q31', '0'): ('q31', '0', 1),
                            ('q31', '#'): ('q31', '#', 1),
                            ('q31', '-'): ('q30', '-', 1),
                            ('q31', 'b'): ('q32', 'b', -1),

                            ('q32', '#'): ('q33', '#', -1),

                            ('q33', '0'): ('q34', 'x', -1),
                            ('q33', '-'): ('q37', '-', 1),
                            ('q33', '1'): ('q37', '1', 1),

                            ('q34', '1'): ('q34', '1', -1),
                            ('q34', '0'): ('q34', '0', -1),
                            ('q34', '-'): ('q34', '-', -1),
                            ('q34', 'b'): ('q35', 'b', 1),

                            ('q35', '-'): ('q35', 'b', 1),
                            ('q35', '0'): ('q36', 'b', 1),
                            ('q35', '1'): ('q40', 'b', 1),

                            ('q36', '1'): ('q36', '1', 1),
                            ('q36', '0'): ('q36', '0', 1),
                            ('q36', '-'): ('q36', '-', 1),
                            ('q36', 'x'): ('q33', 'x', -1),

                            ('q37', 'x'): ('q37', '0', 1),
                            ('q37', '#'): ('q38', '#', 1),

                            ('q38', '0'): ('q38', '0', 1),
                            ('q38', '-'): ('q38', '-', 1),
                            ('q38', 'b'): ('q39', '0', -1),

                            ('q39', '0'): ('q39', '0', -1),
                            ('q39', '-'): ('q39', '-', -1),
                            ('q39', '#'): ('q33', '#', -1),

                            ('q40', '0'): ('q40', 'b', 1),
                            ('q40', '-'): ('q40', 'b', 1),
                            ('q40', 'x'): ('q40', 'b', 1),
                            ('q40', '#'): ('q41', 'b', 1),

                           }
    def fahrenheitToKelvin(self):
        self.states = {'q', 'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10', 'q11',
                      'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21', 'q22',
                      'q23', 'q24', 'q25', 'q26', 'q27', 'q28', 'q29', 'q30', 'q31', 'q32', 'q33',
                      'q34', 'q35','q36', 'q37', 'q38', 'q39', 'q40', 'q41', 'q42', 'q43', 'q44',
                      'q45', 'q46', 'q47', 'q48', 'q49','q50', 'q51', 'q52', 'q53', 'q54', 'q55'}
        self.symbols = {'#', '+', '-', '0', '1', 'B', 'x', '0^255'}
        self.blank_symbol = 'B'
        self.input_symbols = {'0', '1', '+', '-', 'x', '#'}
        self.initial_state = 'q'
        self.accepting_states = {'q55'}
        self.transitions = {('q', '-'): ('q', '-', 1),
                            ('q', '+'): ('q', '+', 1),
                            ('q', '0'): ('q', '0', 1),
                            ('q', 'B'): ('q0', '1', 1),

                            ('q0', 'B'): ('q1', '+', 1),

                            ('q1', 'B'): ('q2', '0', 1),

                            ('q2', 'B'): ('q3', '0', 1),

                            ('q3', 'B'): ('q4', '0', 1),

                            ('q4', 'B'): ('q5', '0', 1),

                            ('q5', 'B'): ('q6', '0', 1),

                            ('q6', 'B'): ('q7', 'B', -1),

                            ('q7', 'B'): ('q8', 'B', 1),
                            ('q7', '0'): ('q7', '0', -1),
                            ('q7', '1'): ('q7', '1', -1),
                            ('q7', '-'): ('q7', '-', -1),
                            ('q7', '+'): ('q7', '+', -1),

                            ('q8', '-'): ('q8', '-', -1),
                            ('q8', '+'): ('q8', '+', -1),
                            ('q8', 'B'): ('q9', '#', 1),

                            ('q9', '+'): ('q9', '+', 1),
                            ('q9', '-'): ('q9', '-', 1),
                            ('q9', '0'): ('q9', '0', 1),
                            ('q9', '1'): ('q9', '1', 1),
                            ('q9', 'B'): ('q10', '#', -1),

                            ('q10', '0'): ('q10', '0', -1),
                            ('q10', '1'): ('q10', '1', -1),
                            ('q10', '+'): ('q10', '+', -1),
                            ('q10', '-'): ('q10', '-', -1),
                            ('q10', '#'): ('q11', '#', 1),

                            ('q11', '-'): ('q13', '-', 1),
                            ('q11', '+'): ('q12', '+', 1),

                            ('q12', '0'): ('q12', '0', 1),
                            ('q12', '1'): ('q12', '1', 1),
                            ('q12', '+'): ('q14', '+', 1),
                            ('q12', '-'): ('q15', '-', 1),

                            ('q13', '0'): ('q13', '0', 1),
                            ('q13', '1'): ('q13', '1', 1),
                            ('q13', '-'): ('q14', '-', 1),
                            ('q13', '+'): ('q15', '+', 1),

                            ('q14', '0'): ('q14', '0', 1),
                            ('q14', '#'): ('q14', '#', 1),
                            ('q14', 'B'): ('q16', '+', -1),

                            ('q15', '#'): ('q15', '#', 1),
                            ('q15', '0'): ('q15', '0', 1),
                            ('q15', 'B'): ('q16', '-', -1),

                            ('q16', '#'): ('q17', '#', -1),

                            ('q17', '0'): ('q17', '0', -1),
                            ('q17', '1'): ('q17', '1', -1),
                            ('q17', '+'): ('q17', '+', -1),
                            ('q17', '-'): ('q17', '-', -1),
                            ('q17', '#'): ('q18', '#', 1),

                            ('q18', '+'): ('q18', '+', 1),
                            ('q18', '-'): ('q18', '-', 1),
                            ('q18', '0'): ('q19', 'B', 1),
                            ('q18', '1'): ('q26', 'B', 1),

                            ('q19', '0'): ('q19', '0', 1),
                            ('q19', '1'): ('q20', '1', 1),

                            ('q20', '+'): ('q20', '+', 1),
                            ('q20', '-'): ('q20', '-', 1),
                            ('q20', '0'): ('q21', 'x', 1),
                            ('q20', '#'): ('q23', '#', -1),

                            ('q21', '+'): ('q21', '+', 1),
                            ('q21', '-'): ('q21', '-', 1),
                            ('q21', '0'): ('q21', '0', 1),
                            ('q21', '#'): ('q21', '#', 1),
                            ('q21', 'B'): ('q22', '0', -1),

                            ('q22', '+'): ('q22', '+', -1),
                            ('q22', '-'): ('q22', '-', -1),
                            ('q22', '0'): ('q22', '0', -1),
                            ('q22', '#'): ('q22', '#', -1),
                            ('q22', 'x'): ('q20', 'x', 1),

                            ('q23', '+'): ('q23', '+', -1),
                            ('q23', '-'): ('q23', '-', -1),
                            ('q23', '0'): ('q23', '0', -1),
                            ('q23', '1'): ('q23', '1', -1),
                            ('q23', '#'): ('q23', '#', -1),
                            ('q23', 'x'): ('q23', '0', -1),
                            ('q23', 'B'): ('q24', 'B', -1),

                            ('q24', '-'): ('q24', '-', -1),
                            ('q24', '+'): ('q24', '+', -1),
                            ('q24', '#'): ('q24', '#', -1),
                            ('q24', 'B'): ('q25', 'B', 1),

                            ('q25', '-'): ('q25', 'B', 1),
                            ('q25', '+'): ('q25', 'B', 1),
                            ('q25', '#'): ('q25', 'B', 1),
                            ('q25', '1'): ('q25', '1', -1),
                            ('q25', 'B'): ('q18', 'B', 1),

                            ('q26', '+'): ('q26', 'B', 1),
                            ('q26', '-'): ('q26', 'B', 1),
                            ('q26', '0'): ('q26', 'B', 1),
                            ('q26', '#'): ('q27', 'B', 1),

                            ('q27', '+'): ('q27', 'B', 1),
                            ('q27', '-'): ('q27', '-', 1),
                            ('q27', '0'): ('q27', '0', 1),
                            ('q27', 'B'): ('q28', '1', 1),

                            ('q28', 'B'): ('q29', '0', 1),

                            ('q29', 'B'): ('q30', '0', 1),

                            ('q30', 'B'): ('q31', '0', 1),

                            ('q31', 'B'): ('q32', '0', 1),

                            ('q32', 'B'): ('q33', '0', 1),

                            ('q33', 'B'): ('q34', '0', 1),

                            ('q34', 'B'): ('q35', '0', 1),

                            ('q35', 'B'): ('q36', '0', 1),

                            ('q36', 'B'): ('q37', '0', -1),

                            ('q37', '0'): ('q37', '0', -1),
                            ('q37', '1'): ('q37', '1', -1),
                            ('q37', '-'): ('q37', '-', -1),
                            ('q37', 'B'): ('q38', 'B', 1),

                            ('q38', '1'): ('q38', '1', 1),
                            ('q38', '0'): ('q38', '0', 1),
                            ('q38', '-'): ('q38', '-', 1),
                            ('q38', 'B'): ('q39', '#', -1),

                            ('q39', '1'): ('q39', '1', -1),
                            ('q39', '0'): ('q39', '0', -1),
                            ('q39', '-'): ('q39', '-', -1),
                            ('q39', 'B'): ('q40', 'B', 1),

                            ('q40', '0'): ('q40', '0', 1),
                            ('q40', '-'): ('q41', '-', 1),
                            ('q40', '1'): ('q43', '1', 1),

                            ('q41', '0'): ('q41', '0', 1),
                            ('q41', '1'): ('q42', '1', 1),

                            ('q42', '0'): ('q42', '0', 1),
                            ('q42', '#'): ('q42', '#', 1),
                            ('q42', '-'): ('q43', '-', 1),
                            ('q42', 'B'): ('q44', '-', -1),

                            ('q43', '0'): ('q43', '0', 1),
                            ('q43', '#'): ('q43', '#', 1),
                            ('q43', '-'): ('q42', '-', 1),
                            ('q43', 'B'): ('q44', 'B', -1),

                            ('q44', '#'): ('q45', '#', -1),

                            ('q45', '0'): ('q46', 'x', -1),
                            ('q45', '-'): ('q49', '-', 1),
                            ('q45', '1'): ('q49', '1', 1),

                            ('q46', '1'): ('q46', '1', -1),
                            ('q46', '0'): ('q46', '0', -1),
                            ('q46', '-'): ('q46', '-', -1),
                            ('q46', 'B'): ('q47', 'B', 1),

                            ('q47', '-'): ('q47', 'B', 1),
                            ('q47', '0'): ('q48', 'B', 1),
                            ('q47', '1'): ('q52', 'B', 1),

                            ('q48', '1'): ('q48', '1', 1),
                            ('q48', '0'): ('q48', '0', 1),
                            ('q48', '-'): ('q48', '-', 1),
                            ('q48', 'x'): ('q45', 'x', -1),

                            ('q49', 'x'): ('q49', '0', 1),
                            ('q49', '#'): ('q50', '#', 1),

                            ('q50', '0'): ('q50', '0', 1),
                            ('q50', '-'): ('q50', '-', 1),
                            ('q50', 'B'): ('q51', '0', -1),

                            ('q51', '0'): ('q51', '0', -1),
                            ('q51', '-'): ('q51', '-', -1),
                            ('q51', '#'): ('q45', '#', -1),

                            ('q52', '0'): ('q52', 'B', 1),
                            ('q52', '-'): ('q52', 'B', 1),
                            ('q52', 'x'): ('q52', 'B', 1),
                            ('q52', '#'): ('q53', 'B', 1),

                            ('q53', '0'): ('q53', '0', 1),
                            ('q53', '-'): ('q53', '-', 1),
                            ('q53', 'B'): ('q54', '+', 1),

                            ('q54', 'B'): ('q55', '0^255', 1),
        }

        # end

    # 3) sama n0.3 yg diatas
    def step(self):
        if self.halted:
            raise RuntimeError('Cannot step halted machine')

        try:
            state, symbol, direction = self.transitions[(self.current_state,
                                                         self.tape[self.head])]
        except KeyError:
            self.halted = True
            return

        self.tape[self.head] = symbol
        self.current_state = state
        self.head += direction

    # end

    # 4)
    def accepted_input(self):
        if not self.halted:
            raise RuntimeError('Machine still running')
        return self.current_state in self.accepting_states

    def print(self, window=10):
        print('... ', end='')
        print(' '.join(self.tape[i] for i in range(
            self.head - window, self.head + window + 1)), end='')
        tape = ' '.join(self.tape[i] for i in range(
            self.head - window, self.head + window + 1))
        tape_state = (tape, self.current_state)
        self.tape_string.append(tape_state)

        print(f' ... state={self.current_state}')
        print(f'{" " * (2 * window + 4)}^')

    # end


if __name__ == '__main__':
    print('Turing Machine Simulator\n\n1. Tambah\n2. Kurang\n3. Kali\n4. Bagi\n5. Faktorial\n6. Pangkat\n7. Logaritma Biner\n8. Celcius to Kelvin\n9. Celsius to Fahrenheit\n10. Kelvin to Fahrenheit\n11. Kelvin to Celcius\n12. Fahrenheit to Celcius\n13. Fahrenheit to Kelvin')
    menu = input('pilihan : ')

    if menu == '1':
        print('\n\nPertambahan')
        tm = TuringMachine()
        angka1 = int(input('\nangka 1 : '))
        angka2 = int(input('angka 2 : '))
        tape = {0: 'b'}
        index = 1

        if angka1 < 0:
          angka1 = angka1 * -1
          for i in range(angka1):
            tape[index] = '-0'
            index += 1
        else:
          for i in range(angka1):
              tape[index] = '0'
              index += 1

        tape[index] = '1'
        index += 1

        if angka2 < 0:
          angka2 = angka2 * -1
          for i in range(angka2):
            tape[index] = '-0'
            index += 1
        else:
          for i in range(angka2):
              tape[index] = '0'
              index += 1

        tm.additionMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        n = 0
        for i in tm.tape.values():
          if i == '0':
            n += 1
          elif i == '-0':
            n -= 1
        print('Hasil = ', n)

    elif menu == '2':
        print('\n\nPengurangan')
        tm = TuringMachine()
        angka1 = int(input('\nangka 1 : '))
        angka2 = int(input('angka 2 : '))
        tape = {0: 'B'}
        index = 1

        index -= 1
        if angka1 < 0:
          angka1 = angka1 * -1
          tape[index] = '-'
          index += 1
          for i in range(angka1):
            tape[index] = '0'
            index += 1
        else:
          for i in range(angka1):
              tape[index] = '0'
              index += 1

        tape[index] = '1'
        index += 1

        if angka2 < 0:
          angka2 = angka2 * -1
          tape[index] = '-'
          index += 1
          for i in range(angka2):
            tape[index] = '0'
            index += 1
        else:
          for i in range(angka2):
              tape[index] = '0'
              index += 1

        tm.substraction()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())


    if menu == '3':
        print('\n\nPerkalian')
        tm = TuringMachine()
        angka1 = input('angka 1 : ')
        angka2 = input('angka 2 : ')
        index = 0
        tape = {}
        if angka1[0] == '-':
            tape[index] = '-'
            index += 1
            angka1 = angka1[1 : : ]
        else:
            tape[index] = '+'
            index += 1

        angka1 = int(angka1)
        for i in range(angka1):
            tape[index] = '0'
            index += 1

        tape[index] = '1'
        index += 1
        if angka2[0] == '-':
            tape[index] = '-'
            index += 1
            angka2 = angka2[1 : : ]
        else:
            tape[index] = '+'
            index += 1

        angka2 = int(angka2)
        for i in range(angka2):
            tape[index] = '0'
            index += 1

        tm.multiplicationMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0
        sign = 1
        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1
          elif x == '-':
            sign *= -1
        sumOfZero *= sign
        perkalian = sumOfZero
        print(f'Hasil: {perkalian}')

    elif menu == '4':
        print('\n\nPembagian')
        tm = TuringMachine()
        angka1 = int(input('\nangka 1 : '))
        angka2 = int(input('angka 2 : '))
        tape = {0: 'B'}
        index = 1

        index -= 1
        if angka1 < 0:
          angka1 = angka1 * -1
          tape[index] = '-'
          index += 1
          for i in range(angka1):
            tape[index] = '0'
            index += 1
        else:
          for i in range(angka1):
              tape[index] = '0'
              index += 1

        tape[index] = '1'
        index += 1

        if angka2 < 0:
          angka2 = angka2 * -1
          tape[index] = '-'
          index += 1
          for i in range(angka2):
            tape[index] = '0'
            index += 1
        else:
          for i in range(angka2):
              tape[index] = '0'
              index += 1

        tm.division()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())


    if menu == '5':
        print('\n\nFaktorial')
        tm = TuringMachine()
        angka1 = int(input('\ninput : '))
        tape = {0: 'b'}
        index = 0
        for i in range(angka1):
            tape[index] = '0'
            index += 1


        tm.faktorialMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0
        sign = 1
        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1
          elif x == '-':
            sign *= -1
        sumOfZero *= sign
        faktorial = sumOfZero
        print(f'Hasil: {faktorial}')

    if menu == '6':
        print('\n\nPangkat')
        tm = TuringMachine()
        angka2 = int(input('angka : '))
        angka1 = int(input('\npangkat : '))
        tape = {0: 'b'}
        index = 1

        for i in range(angka1):
          tape[index] = '0'
          index += 1

        tape[index] = '1'
        index += 1

        for i in range(angka2):
          tape[index] = '0'
          index += 1

        tape[index] = '1'
        index += 1

        tm.powerMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        n = 0
        for i in tm.tape.values():
          if i == '0':
            n += 1
          elif i == '-0':
            n -= 1
        print('Hasil = ', n)

    if menu == '7':
        print('\n\nLogaritma Biner')
        tm = TuringMachine()
        angka1 = int(input('\n2 log : '))
        tape = {0: 'b'}
        index = 0
        for i in range(angka1):
            tape[index] = '0'
            index += 1


        tm.logaritmaMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0

        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1

        result = sumOfZero
        print(f'2 Log {angka1} = {result}')

    elif menu == '8':
        print('\n\nCelcius to Kelvin')
        tm = TuringMachine()
        angka1 = int(input('\nangka 1 : '))
        tape = {0: 'b'}
        index = 1

        for i in range(angka1):
              tape[index] = '0'
              index += 1

        tape[index] = '1'
        index += 1

        tm.celciusKelvin()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        n = 0
        for i in tm.tape.values():
          if i == '0':
            n += 1
          elif i == '0^273':
            n += 273
        print(f'Celcius: {angka1} = Kelvin: {n}')

    elif menu == '9':
        print('\n\nCelsius to Fahrenheit')
        tm = TuringMachine()
        celsius = input('Celsius : ')
        index = 0
        tape = {}
        if celsius[0] == '-':
            tape[index] = '-'
            index += 1
            celsius = celsius[1 : : ]
        else:
            tape[index] = '+'
            index += 1

        celsius = int(celsius)
        for i in range(celsius):
            tape[index] = '0'
            index += 1

        tm.celsiusToFahrenheit()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0
        const0pow32 = 32
        sign = 1
        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1
          elif x == '-':
            sign *= -1
        sumOfZero *= sign
        fahrenheit = sumOfZero + const0pow32
        print(f'Celsius: {celsius} = Fahrenheit: {fahrenheit}')

    elif menu == '10':
        print('\n\nKelvin to Fahrenheit')
        tm = TuringMachine()
        angka1 = input('Kelvin : ')
        index = 0
        tape = {}
        if angka1[0] == '-':
            tape[index] = '-'
            index += 1
            angka1 = angka1[1 : : ]
        else:
            tape[index] = '+'
            index += 1

        angka1 = int(angka1)
        for i in range(angka1):
            tape[index] = '0'
            index += 1

        tm.KelvinToFahrenheitMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0
        const0pow459 = 459
        sign = -1
        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1
          elif x == '-':
            sign *= -1
        sumOfZero *= sign
        f = sumOfZero - const0pow459
        print(f'Kelvin: {angka1} = Fahrenheit: {f}')

    elif menu == '11':
        print('\n\nKelvin to Celcius')
        tm = TuringMachine()
        angka1 = int(input('\nKelvin : '))
        if (angka1 >= 273) :
          tape = {0: 'K'}
          index = 1
          for i in range(angka1-273):
              tape[index] = '0'
              index += 1

        elif (angka1 < 273) :
          tape = {0: 'b'}
          index = 0
          for i in range(angka1):
              tape[index] = '0'
              index += 1


        tm.kelvinToCelciusMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0
        const0pow273 = -273

        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1
          elif x == 'K':
            sumOfZero += const0pow273

        result = sumOfZero
        print(f'Kelvin: {angka1} = Celcius: {result}')

    elif menu == '12':
        print('\n\nFahrenheit to Celcius')
        tm = TuringMachine()
        fahrenheit = int(input('\nFahrenheit : '))
        angka2 = int(input('32 : '))
        tape = {0: 'b'}
        index = 1

        index -= 1
        if fahrenheit < 0:
          fahrenheit = fahrenheit * -1
          tape[index] = '-'
          index += 1
          for i in range(fahrenheit):
            tape[index] = '0'
            index += 1
        else:
          for i in range(fahrenheit):
              tape[index] = '0'
              index += 1

        tape[index] = '1'
        index += 1

        if angka2 < 0:
          angka2 = angka2 * -1
          tape[index] = '-'
          index += 1
          for i in range(angka2):
            tape[index] = '0'
            index += 1
        else:
          for i in range(angka2):
              tape[index] = '0'
              index += 1

        tm.fahrenheitToCelciusMode()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0
        sign = 1
        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1
          elif x == '-':
            sign *= -1
        sumOfZero *= sign
        celcius = sumOfZero
        print(f'Fahrenheit: {fahrenheit} = Celcius: {celcius}')

    elif menu == '13':
        print('\n\nFahrenheit to Kelvin')
        tm = TuringMachine()
        fahrenheit = input('Fahrenheit : ')
        index = 0
        tape = {}
        if fahrenheit[0] == '-':
            tape[index] = '-'
            index += 1
            fahrenheit = fahrenheit[1 : : ]
        else:
            tape[index] = '+'
            index += 1

        fahrenheit = int(fahrenheit)
        for i in range(fahrenheit):
            tape[index] = '0'
            index += 1

        tm.fahrenheitToKelvin()
        tm.initialize(tape)

        while not tm.halted:
            tm.print()
            tm.step()

        print('Accepted : ', tm.accepted_input())

        sumOfZero = 0
        const0pow255 = 255
        sign = 1
        for x in tm.tape.values():
          if x == '0':
            sumOfZero += 1
          elif x == '-':
            sign *= -1
        sumOfZero *= sign
        kelvin = sumOfZero + const0pow255
        print(f'Fahrenheit: {fahrenheit} = Kelvin: {kelvin}')